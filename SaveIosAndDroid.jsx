/*** Remixer 1: @herkulano (http://www.herkulano.com)* Remixer 2: @hotappsfactory (http://www.hotappsfactory.com)* Remixer 3: @marcmatta (https://github.com/marcmatta)* Thanks to: Niels Bosma (niels.bosma@motorola.com)*/var folder = Folder.selectDialog();var document = app.activeDocument;var projectname;var fname;var filename;var preffix;if (document && folder) {	filename = prompt("Name", "") || "";    preffix = prompt("Preffix", "") || "";    projectname = prompt("Project Name", "") || "";    fname = prompt("Folder Name", "") || "";}String.prototype.replaceAll = function(str1, str2, ignore) {    return this.replace(new RegExp(str1.replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|\<\>\-\&])/g,"\\$&"),(ignore?"gi":"g")),(typeof(str2)=="string")?str2.replace(/\$/g,"$$$$"):str2);}if (document && folder) {	saveToRes(100, preffix+"-", filename.replaceAll(" ","-"), "", "iOS images", false);	saveToRes(200, preffix+"-", filename.replaceAll(" ","-"), "@2x", "iOS images", false);		saveToRes(300, preffix+"-", filename.replaceAll(" ","-"), "@3x", "iOS images", false);			saveToRes(100, preffix+"_", filename.replaceAll(" ","_"), "", "Android images/"+fname+"/mdpi", true);	saveToRes(150, preffix+"_", filename.replaceAll(" ","_"), "", "Android images/"+fname+"/hdpi", true);	saveToRes(200, preffix+"_", filename.replaceAll(" ","_"), "", "Android images/"+fname+"/xhdpi", true);	saveToRes(300, preffix+"_", filename.replaceAll(" ","_"), "", "Android images/"+fname+"/xxhdpi", true);	saveToRes(400, preffix+"_", filename.replaceAll(" ","_"), "", "Android images/"+fname+"/xxxhdpi", true);}/*** Scale and export file suffixed by densitySuffix, in a specific folder named folderName*/function saveToRes(scaleTo, pre, fn, densitySuffix, folderName, lowerCase) {	var i, ab, file, options;			var myFolder = new Folder(folder.absoluteURI + "/" +projectname + " " + folderName);	if(!myFolder.exists) myFolder.create();		for (i = document.artboards.length - 1; i >= 0; i--) {		document.artboards.setActiveArtboardIndex(i);		ab = document.artboards[i];				file = new File( myFolder.fsName + "/" + pre + fn + densitySuffix + ".png");				options = new ExportOptionsPNG24();		options.antiAliasing = true;		options.transparency = true;		options.artBoardClipping = true;		options.verticalScale = scaleTo;		options.horizontalScale = scaleTo;				document.exportFile(file, ExportType.PNG24, options);	}}function isUpperCase(myString) {       return (myString == myString.toUpperCase()); } 